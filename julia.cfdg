width = 800
cutoff = 1100
c = -0.1, 0.651

CF::Size = [s width width x (-width/2) y (-width/2)]

startshape julia [b 1 sat 1 h 100]

shape julia {
  loop xx = (-1.5, 1.5, 3/width) [x 1] {
    loop yy = (-1.5, 1.5, 3/width) [y 1] {
      pixel(xx, yy) []
    }
  }
}

shape pixel(number real, number imaginary) {
  i = iterations(real, imaginary, 0)
  SQUARE [hue mod(i,360) b -floor(i/cutoff)]
}

iterations(real, imaginary, depth) = let (
  next_real = real^2 - imaginary^2 + c[0];
  next_imaginary = 2*real*imaginary + c[1];
  if (depth >= cutoff,
    cutoff,
    if (next_real^2 + next_imaginary^2 > 4,
      depth + 1,
      iterations(next_real, next_imaginary, depth + 1)
    )
  )
)

